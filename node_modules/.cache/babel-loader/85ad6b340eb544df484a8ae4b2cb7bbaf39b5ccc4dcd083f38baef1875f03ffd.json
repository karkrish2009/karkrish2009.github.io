{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karkr\\\\Documents\\\\classes\\\\dev10\\\\React\\\\repeating assignment\\\\video-recommender\\\\src\\\\components\\\\GameList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport TableHead from \"./TableHead\";\nimport GameRow from \"./GameRow\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameList({\n  gamesData,\n  handleGamesData\n}) {\n  _s();\n  //{ preferences }\n  const apiKey = process.env.REACT_APP_GAME_FINDER_API_KEY;\n  console.log(apiKey);\n  const {\n    state\n  } = useLocation();\n  const formData = (state === null || state === void 0 ? void 0 : state.formData) || {};\n  // console.log(\"This is the game Data: \", formData);\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    date.setUTCHours(0, 0, 0, 0); // Set the time to midnight UTC\n    const year = date.getUTCFullYear();\n    const month = String(date.getUTCMonth() + 1).padStart(2, '0');\n    const day = String(date.getUTCDate()).padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n  function buildQueryString(formData) {\n    let queryParams = \"\";\n    if (!formData) {\n      return apiKey;\n    }\n    if (formData.startDate && formData.endDate) {\n      const startDateFormatted = formatDate(formData.startDate);\n      const endDateFormatted = formatDate(formData.endDate);\n      queryParams += `&dates=${startDateFormatted},${endDateFormatted}`;\n    }\n    if (formData.minMetaCritic >= 0 && formData.maxMetaCritic) {\n      queryParams += `&metacritic=${formData.minMetaCritic},${formData.maxMetaCritic}`;\n    }\n    queryParams += \"&page_size=100\";\n    return queryParams;\n  }\n  const queryParamString = buildQueryString(formData);\n  const apiUrl = `https://api.rawg.io/api/games?key=${apiKey}${queryParamString}`;\n  console.log(\"apiUrl is: \", apiUrl);\n  useEffect(() => {\n    fetch(apiUrl).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else if (res.status >= 500) {\n        return res.json().then(error => Promise.reject(new Error(error.message)));\n      } else {\n        // All other errors\n        return Promise.reject(new Error(`Unexpected status code ${res.status}`));\n      }\n    }).then(data => {\n      handleGamesData(data.results);\n    }).catch(error => {\n      console.error(error); // Log for debugging\n    });\n  }, []);\n  //  console.log(games);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List/table of game data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), gamesData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No games found under the specified criteria.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          headers: ['Name', 'Platforms', 'Genres', 'Release Date', 'MetaCritic Rating', 'ESRB Rating', 'Image']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: gamesData.map(game => /*#__PURE__*/_jsxDEV(GameRow, {\n            game: game\n          }, game.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(GameList, \"9D8E0QKhml/pEML4lEB2cHsq/S0=\", false, function () {\n  return [useLocation];\n});\n_c = GameList;\nvar _c;\n$RefreshReg$(_c, \"GameList\");","map":{"version":3,"names":["useEffect","useState","TableHead","GameRow","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","GameList","gamesData","handleGamesData","_s","apiKey","process","env","REACT_APP_GAME_FINDER_API_KEY","console","log","state","formData","formatDate","dateString","date","Date","setUTCHours","year","getUTCFullYear","month","String","getUTCMonth","padStart","day","getUTCDate","buildQueryString","queryParams","startDate","endDate","startDateFormatted","endDateFormatted","minMetaCritic","maxMetaCritic","queryParamString","apiUrl","fetch","then","res","ok","json","status","error","Promise","reject","Error","message","data","results","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","length","headers","map","game","id","_c","$RefreshReg$"],"sources":["C:/Users/karkr/Documents/classes/dev10/React/repeating assignment/video-recommender/src/components/GameList.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport TableHead from \"./TableHead\";\r\nimport GameRow from \"./GameRow\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function GameList({gamesData, handleGamesData}) {//{ preferences }\r\n    const apiKey = process.env.REACT_APP_GAME_FINDER_API_KEY;\r\n    console.log(apiKey);\r\n    const { state } = useLocation();\r\n    const formData = state?.formData || {};\r\n    // console.log(\"This is the game Data: \", formData);\r\n\r\n    function formatDate(dateString) {\r\n        const date = new Date(dateString);\r\n        date.setUTCHours(0, 0, 0, 0); // Set the time to midnight UTC\r\n        const year = date.getUTCFullYear();\r\n        const month = String(date.getUTCMonth() + 1).padStart(2, '0');\r\n        const day = String(date.getUTCDate()).padStart(2, '0');\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n\r\n    function buildQueryString(formData) {\r\n        let queryParams = \"\";\r\n\r\n        if (!formData) {\r\n            return apiKey;\r\n        }\r\n\r\n        if (formData.startDate && formData.endDate) {\r\n            const startDateFormatted = formatDate(formData.startDate);\r\n            const endDateFormatted = formatDate(formData.endDate);\r\n            queryParams += `&dates=${startDateFormatted},${endDateFormatted}`;\r\n        }\r\n\r\n        if (formData.minMetaCritic>=0 && formData.maxMetaCritic) {\r\n            queryParams += `&metacritic=${formData.minMetaCritic},${formData.maxMetaCritic}`;\r\n        }\r\n\r\n        queryParams+=\"&page_size=100\";\r\n        return queryParams;\r\n    }\r\n\r\n    const queryParamString = buildQueryString(formData);\r\n    const apiUrl = `https://api.rawg.io/api/games?key=${apiKey}${queryParamString}`\r\n    console.log(\"apiUrl is: \", apiUrl);\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                } else if (res.status >= 500) {\r\n                    return res\r\n                        .json()\r\n                        .then(error =>\r\n                            Promise.reject(new Error(error.message))\r\n                        );\r\n                } else {\r\n                    // All other errors\r\n                    return Promise.reject(\r\n                        new Error(`Unexpected status code ${res.status}`)\r\n                    );\r\n                }\r\n            })\r\n            .then(data => {\r\n                handleGamesData(data.results);\r\n            })\r\n            .catch(error => {\r\n                console.error(error); // Log for debugging\r\n            });\r\n    }, []);\r\n    //  console.log(games);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>List/table of game data</h1>\r\n                {gamesData.length === 0 ? (\r\n                    <p>No games found under the specified criteria.</p>\r\n                ) : (\r\n                    <table>\r\n                        <TableHead\r\n                            headers={['Name', 'Platforms', 'Genres', 'Release Date', 'MetaCritic Rating', 'ESRB Rating', 'Image']}\r\n                        />\r\n                        <tbody>\r\n                            {gamesData.map((game) => (\r\n                                <GameRow\r\n                                    key={game.id}\r\n                                    game={game}\r\n                                />\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;AAE/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,QAAQA,CAAC;EAACC,SAAS;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAAC;EAC5D,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,6BAA6B;EACxDC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;EACnB,MAAM;IAAEM;EAAM,CAAC,GAAGf,WAAW,CAAC,CAAC;EAC/B,MAAMgB,QAAQ,GAAG,CAAAD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,QAAQ,KAAI,CAAC,CAAC;EACtC;;EAEA,SAASC,UAAUA,CAACC,UAAU,EAAE;IAC5B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjCC,IAAI,CAACE,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAMC,IAAI,GAAGH,IAAI,CAACI,cAAc,CAAC,CAAC;IAClC,MAAMC,KAAK,GAAGC,MAAM,CAACN,IAAI,CAACO,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAC7D,MAAMC,GAAG,GAAGH,MAAM,CAACN,IAAI,CAACU,UAAU,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACtD,OAAQ,GAAEL,IAAK,IAAGE,KAAM,IAAGI,GAAI,EAAC;EACpC;EAEA,SAASE,gBAAgBA,CAACd,QAAQ,EAAE;IAChC,IAAIe,WAAW,GAAG,EAAE;IAEpB,IAAI,CAACf,QAAQ,EAAE;MACX,OAAOP,MAAM;IACjB;IAEA,IAAIO,QAAQ,CAACgB,SAAS,IAAIhB,QAAQ,CAACiB,OAAO,EAAE;MACxC,MAAMC,kBAAkB,GAAGjB,UAAU,CAACD,QAAQ,CAACgB,SAAS,CAAC;MACzD,MAAMG,gBAAgB,GAAGlB,UAAU,CAACD,QAAQ,CAACiB,OAAO,CAAC;MACrDF,WAAW,IAAK,UAASG,kBAAmB,IAAGC,gBAAiB,EAAC;IACrE;IAEA,IAAInB,QAAQ,CAACoB,aAAa,IAAE,CAAC,IAAIpB,QAAQ,CAACqB,aAAa,EAAE;MACrDN,WAAW,IAAK,eAAcf,QAAQ,CAACoB,aAAc,IAAGpB,QAAQ,CAACqB,aAAc,EAAC;IACpF;IAEAN,WAAW,IAAE,gBAAgB;IAC7B,OAAOA,WAAW;EACtB;EAEA,MAAMO,gBAAgB,GAAGR,gBAAgB,CAACd,QAAQ,CAAC;EACnD,MAAMuB,MAAM,GAAI,qCAAoC9B,MAAO,GAAE6B,gBAAiB,EAAC;EAC/EzB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEyB,MAAM,CAAC;EAElC3C,SAAS,CAAC,MAAM;IACZ4C,KAAK,CAACD,MAAM,CAAC,CACRE,IAAI,CAACC,GAAG,IAAI;MACT,IAAIA,GAAG,CAACC,EAAE,EAAE;QACR,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;MACrB,CAAC,MAAM,IAAIF,GAAG,CAACG,MAAM,IAAI,GAAG,EAAE;QAC1B,OAAOH,GAAG,CACLE,IAAI,CAAC,CAAC,CACNH,IAAI,CAACK,KAAK,IACPC,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAACH,KAAK,CAACI,OAAO,CAAC,CAC3C,CAAC;MACT,CAAC,MAAM;QACH;QACA,OAAOH,OAAO,CAACC,MAAM,CACjB,IAAIC,KAAK,CAAE,0BAAyBP,GAAG,CAACG,MAAO,EAAC,CACpD,CAAC;MACL;IACJ,CAAC,CAAC,CACDJ,IAAI,CAACU,IAAI,IAAI;MACV5C,eAAe,CAAC4C,IAAI,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC,CACDC,KAAK,CAACP,KAAK,IAAI;MACZjC,OAAO,CAACiC,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACN;;EAEA,oBACI5C,OAAA,CAAAE,SAAA;IAAAkD,QAAA,eACIpD,OAAA;MAAAoD,QAAA,gBACIpD,OAAA;QAAAoD,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC/BpD,SAAS,CAACqD,MAAM,KAAK,CAAC,gBACnBzD,OAAA;QAAAoD,QAAA,EAAG;MAA4C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEnDxD,OAAA;QAAAoD,QAAA,gBACIpD,OAAA,CAACJ,SAAS;UACN8D,OAAO,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,cAAc,EAAE,mBAAmB,EAAE,aAAa,EAAE,OAAO;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzG,CAAC,eACFxD,OAAA;UAAAoD,QAAA,EACKhD,SAAS,CAACuD,GAAG,CAAEC,IAAI,iBAChB5D,OAAA,CAACH,OAAO;YAEJ+D,IAAI,EAAEA;UAAK,GADNA,IAAI,CAACC,EAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEf,CACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACV;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC,gBACR,CAAC;AAEX;AAAClD,EAAA,CA5FuBH,QAAQ;EAAA,QAGVL,WAAW;AAAA;AAAAgE,EAAA,GAHT3D,QAAQ;AAAA,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}